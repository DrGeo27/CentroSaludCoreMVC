// <auto-generated />
using System;
using CentroSalud3.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CentroSalud3.Migrations
{
    [DbContext(typeof(AmbulatorioDbContext))]
    [Migration("20220314165835_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CentroSalud3.Models.Enfermera", b =>
                {
                    b.Property<int>("EnfermeraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnfermeraConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnfermeraEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnfermeraNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnfermeraNumPacientes")
                        .HasColumnType("int");

                    b.Property<string>("EnfermeraTelefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("EnfermeraId");

                    b.ToTable("Enfermeras");
                });

            modelBuilder.Entity("CentroSalud3.Models.Medicacion", b =>
                {
                    b.Property<int>("MedicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MedicacionDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MedicacionDosis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MedicacionGrupo")
                        .HasColumnType("int");

                    b.Property<string>("MedicacionNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumPacientesPautados")
                        .HasColumnType("int");

                    b.HasKey("MedicacionId");

                    b.ToTable("Medicaciones");
                });

            modelBuilder.Entity("CentroSalud3.Models.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MedicoConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoTelefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("NumPacientes")
                        .HasColumnType("int");

                    b.HasKey("MedicoId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("CentroSalud3.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PacienteEdad")
                        .HasColumnType("int");

                    b.Property<string>("PacienteEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PacienteFxNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PacienteNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteSexo")
                        .HasColumnType("int");

                    b.Property<string>("PacienteTelefono")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CentroSalud3.Models.PacienteConEnfermera", b =>
                {
                    b.Property<int>("PacienteConEnfermeraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnfermeraId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("PacienteConEnfermeraId");

                    b.HasIndex("EnfermeraId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacientesConEnfermeras");
                });

            modelBuilder.Entity("CentroSalud3.Models.PacienteConMedicacion", b =>
                {
                    b.Property<int>("PacienteConMedicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MedicacionId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("PacienteConMedicacionId");

                    b.HasIndex("MedicacionId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacientesConMedicaciones");
                });

            modelBuilder.Entity("CentroSalud3.Models.PacienteConMedico", b =>
                {
                    b.Property<int>("PacienteConMedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("PacienteConMedicoId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacientesConMedicos");
                });

            modelBuilder.Entity("CentroSalud3.Models.PacienteConEnfermera", b =>
                {
                    b.HasOne("CentroSalud3.Models.Enfermera", "Enfermera")
                        .WithMany()
                        .HasForeignKey("EnfermeraId");

                    b.HasOne("CentroSalud3.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.Navigation("Enfermera");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CentroSalud3.Models.PacienteConMedicacion", b =>
                {
                    b.HasOne("CentroSalud3.Models.Medicacion", "Medicacion")
                        .WithMany()
                        .HasForeignKey("MedicacionId");

                    b.HasOne("CentroSalud3.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("CentroSalud3.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.Navigation("Medicacion");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CentroSalud3.Models.PacienteConMedico", b =>
                {
                    b.HasOne("CentroSalud3.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("CentroSalud3.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
